@using Algebra.Data
@using Algebra.Entities.ViewModels
@using Newtonsoft.Json;
@model RegistrationFormViewModel

<div class="container">
    <form method="post" id="registration-form">
        <input name="__RequestVerificationToken" type="hidden" value="CfDJ8KW5cuB058RCnNyZSLI7AUjUAtTwe54jQ4Z9Goyn3WKPcpVFYSFUM5J-JDFC3E-MZIUcyR0UnbrvrC_sHv6MbUONStuIMhqDc7i00pQiGkrzf3hK6t5gZFVrjUpyAcargow4zvKU_ISjdPfoLTNF588" />
        @Html.AntiForgeryToken()
        <div class="panel panel-default row" style="padding: 10px; margin: 10px">
            <div id="Tabs" role="tabpanel">
                <!-- Nav tabs -->
                <ul class="nav nav-tabs" role="tablist">
                    <li class="disabled"><a href="#member" aria-controls="personal" role="tab" data-toggle="tab">Member Details</a></li>
                    <li class="disabled"><a href="#spouse" aria-controls="employment" role="tab">Spouse Details</a></li>
                    <li class="disabled"><a href="#dependent" aria-controls="dependent" role="tab">Dependent(s)</a></li>
                    <li class="disabled"><a href="#membership-fee" aria-controls="membership-fee" role="tab">Membership Fee</a></li>
                    <li class="disabled"><a href="#assets" aria-controls="assets" role="tab">Assets</a></li>
                </ul>
                <!-- Tab panes -->
                <div class="tab-content" style="padding-top: 20px">
                    <div role="tabpanel" class="tab-pane active" id="member">
                        @await Html.PartialAsync("_Member", Model.Member)
                    </div>
                    <div role="tabpanel" class="tab-pane" id="spouse">
                        @await Html.PartialAsync("_Spouse", Model.Spouse)
                    </div>
                    <div role="tabpanel" class="tab-pane" id="dependent">
                        @await Html.PartialAsync("_Dependent", Model.Dependent)
                    </div>
                    <div role="tabpanel" class="tab-pane" id="membership-fee">
                        @await Html.PartialAsync("_Payment", Model.Payment)
                    </div>
                    <div role="tabpanel" class="tab-pane" id="assets">
                        Assets
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <button type="button" class="btn btn-primary" id="btn-submit">Submit</button>
            <button type="button" class="btn btn-default" id="btn-cancel" onclick="history.back()">Cancel</button>
        </div>
    </form>

    @* Model for error list *@
    <div class="modal fade" id="error-model" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <i class="glyphicon glyphicon-alert white"></i><h4 class="modal-title"></h4>
                </div>
                <div class="modal-body panel panel-default" style="padding: 10px; margin: 10px">
                    <ul></ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>

</div>
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script type="text/javascript">
        var r = {
            Location: @Model.LocationId,
            Type: @Model.MembershipType,
            Reffered: @Model.ReferredBy
        };



        $(document).ready(function () {
            var o = new Registration(r);

            $("#btn-submit").click(function () {
                o.SubmitForm();
            });

            //$("#M_MembershipType").change(function () {
            //    $("#M_LocationId").val("0");
            //    var member_type = $(this).val();
            //    o.TabsSelection(member_type);
            //});

            //$("#M_LocationId").change(function () {
            //    console.log('inside location change');
            //    let locCtrl = $(this);
            //    let locationId = $(this).val();
            //    let locationTxt = locCtrl.find(':selected').text();
            //    $("#M_Location").val(locationTxt);
            //    o.SetCardNumber(locationTxt.charAt(0));
            //    o.PopulatePaymentControls(locationId)
            //});

            $("#P_PaymentMode").change(function () {
                //let mode = $(this).val();
                if (this.value == '6' || this.value == '7')
                {
                    $("#cheque-section").show();
                }
                else {
                    $("#cheque-section").hide();
                }
            });

        });

        /*
         * This below code segment will 
         * add/remove the cheque detail rows 
         * */

        var regex = /^(.+?)(\d+)$/i;
        var cloneIndex = $(".clonedInput").length;
        
        function clone() {
            $(this).parents(".clonedInput").clone()
                .appendTo("#cheque-section")
                .attr("id", "clonedInput" + cloneIndex)
                .find(".form-group")
                .each(function () {
                    var id = this.id || "";
                    console.log('Id : '+id);
                    var match = id.match(regex) || [];
                    console.log('match : ' + match);
                    if (match.length == 3) {
                        this.id = match[1] + (cloneIndex);
                    }
                })
                .on('click', 'button.clone', clone)
                .on('click', 'button.remove', remove);
            cloneIndex++;
            
        }
        function remove() {
            $(this).parents(".clonedInput").remove();
        }

        $("button.clone").on("click", clone);
        $("button.remove").on("click", remove);

    </script>
}
